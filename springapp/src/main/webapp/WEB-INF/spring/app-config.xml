<?xml version="1.0" encoding="UTF-8"?>
<!-- 
	Este archivo contendrá las definiciones de beans (POJO's)
	usados por el DispatcherServlet.
	
	Es decir, este archivo es el WebApplicationContext
	donde situaremos todos los componentes.
	
	La interfaz utilizada por el DispatcherServlet para la
	instanciación de los beans es WebApplicationContext.
	Dicha interfaz es una extension de ApplicationContext
	pero posee caracteristicas especiales necesarias para
	aplicaciones web.
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

       <!-- Scans the classpath of this application for @Components to deploy as beans -->
       <context:component-scan base-package="com.companyname.springapp.web" />

       <!-- Configures the @Controller programming model -->
       <mvc:annotation-driven/>
       <!-- 
       		Ahora podemos trabajar las rutas con su nombre desde el controlador sin
       		especificar la ubicacion
        -->
       <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
         <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
         <property name="prefix" value="/WEB-INF/views/"></property>
         <property name="suffix" value=".jsp"></property>        
       </bean>

</beans>